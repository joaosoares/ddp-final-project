#include <stdio.h>

#include "interface.h"

#include "xil_cache.h"
#include "xil_printf.h"


void interface_init()
{
	dma_config 		   = (unsigned int *)0x40400000;
	my_montgomery_port = (unsigned int *)0x43C00000;
	my_montgomery_data = (unsigned int *)0x43C10000;
}

//Simple test: mwr 0x40400000 1; mwr 0x40400028 1; mwr 0x40400018 0x100000;
void bram_dma_transfer(unsigned int* dma_config, unsigned int * data_addr, unsigned int data_len)
{
    // Flush the data cache to ensure that fresh data is stored inside DRAM

    // Flush the entire Data cache.
    // Xil_DCacheFlush();

    // Flush only the necessary data
    Xil_DCacheFlushRange((INTPTR)data_addr,(int)DMA_TRANSFER_NUMBER_OF_WORDS*4);

    // Perform the DMA transfer
    dma_config[MM2S_DMACR_OFFSET]   = 1;                //Stop
    dma_config[MM2S_SA_OFFSET]      = (int)data_addr;   //Specify read address
    dma_config[MM2S_LENGTH_OFFSET]  = data_len*4;       //Specify number of bytes
}

void test_dma_transfer()
{
    int h,i;
    unsigned int src[DMA_TRANSFER_NUMBER_OF_WORDS];

    xil_printf("Testing DMA/BRAM interface");
    for (h=0; h<10; h++)
    {
        xil_printf(".");
        for (i=0; i< DMA_TRANSFER_NUMBER_OF_WORDS; i++)
        {
            src[i]=rand();
        }

        bram_dma_transfer(dma_config,src,DMA_TRANSFER_NUMBER_OF_WORDS);
        //Wait for 100 cycles to be sure that the DMA transfer has completed
        i=0;
        while (i<100)
            i = i + 1;

        //Compare the source and contents of the BRAM
        for (i=0; i<DMA_TRANSFER_NUMBER_OF_WORDS; i++)
        {
            int val1,val2;

            val1=src[i];
            val2=my_montgomery_data[i];

            //A mismatch in the first couple of words is OK - some cycles are required by the DMA transfer
            if (val1!=val2)
            {
                xil_printf("BAD: i=%d, addr(bram[i])=%x and addr(src[i])=%x, bram[i]=%x, src[i]=%x\n\r",i,&my_montgomery_data[i],&src[i],val2,val1);
                return;
            }
        }
    }
    xil_printf("OK\n\r");
}

void port2_wait_for_done()
{
    while(my_montgomery_port[1]==0)  //Read a response from P2
    {}
}

void print_bram_contents()
{
    int i;
    xil_printf("BRAM contents:\n\r");
    for (i=0; i<DMA_TRANSFER_NUMBER_OF_WORDS; i+=4)
        xil_printf("%08x %08x %08x %08x\n\r",my_montgomery_data[i], my_montgomery_data[i+1], my_montgomery_data[i+2], my_montgomery_data[i+3]);
}
